library(caTools)   #for using split function
library(party)      # for creating DT
library(rpart)       # for creating DT
data("ctg", package = "fuzzyforest")
str(ctg)
data$NSPF<-factor(data$NSP)
data$NSP<-factor(data$NSP)
data = ctg
data$NSPF<-factor(data$NSP)
str(data)
table(data$NSPF)
#partition data into Training and Test Datasets
set.seed(1234)
split=sample.split(data$NSPF,SplitRatio=0.8)
split
training_set=subset(data,split==TRUE)
test_set= subset(data, split==FALSE)
tree<-ctree(NSPF~LB+AC+FM,data=training_set)
tree
plot(tree)
View(data)
# Data Visualization in R : Histogram
vehicle = read.csv("vehicle.csv")
getwd()
# Data Visualization in R : Histogram
vehicle = read.csv("vehicle.csv")
vehicle
vehicle$lc
hist(vehicle$lc)
head(vehicle)
tail(vehicle)
library("xlsx")
setwd("/Users/gautamsaha/Desktop/projects/r-progs/")
# read and sheet index
emp = read.xlsx("employee.xlsx",sheetIndex = 2)
emp
# row index
emp2 = read.xlsx("employee.xlsx",sheetIndex = 1,rowIndex = 1:3)
emp2
# row index
emp2 = read.xlsx("employee.xlsx",sheetIndex = 2,rowIndex = 1:3)
emp2
# row index
emp2 = read.xlsx("employee.xlsx",sheetIndex = 2,rowIndex = 1:2)
emp2
# colIndex
emp2 = read.xlsx("employee.xlsx",sheetIndex = 2,colIndex = 1:2)
emp2
# colIndex
emp2 = read.xlsx("employee.xlsx",sheetIndex = 2,colIndex = 1:1)
emp2
# colIndex
emp2 = read.xlsx("employee.xlsx",sheetIndex = 2,colIndex = 1:2)
emp2
#startrow
emp2 = read.xlsx("employee.xlsx",sheetIndex = 1,startRow = 2)
emp2
#startrow
emp2 = read.xlsx("employee.xlsx",sheetIndex = 1,startRow = 2)
emp2
#startrow
emp2 = read.xlsx("employee.xlsx",sheetIndex = 1,startRow = 1)
emp2
#write into xlsx
df=data.frame(name=c("Bob","Sam","Amy"),
salary=c(2500,3000,2000),
start_date=as.Date(c("1981-05-25","1980-05-25","1979-05-25")),
dept=c("EE","EC","CIVIL"))
df2=data.frame(name=c("GAutam","Rishabh","Amy Jackson"),
salary=c(2500,3000,2000),
start_date=as.Date(c("1981-05-25","1980-05-25","1979-05-25")),
dept=c("EE","EC","CIVIL"))
write.xlsx(df, file = "emp.xlsx",col.names = T,row.names = F)
data = read.xlsx("emp.xlsx",sheetIndex = 1)
data
data = read.xlsx("emp.xlsx",sheetIndex = 1)
data
#append
write.xlsx(df2, file = "emp.xlsx",col.names = T,row.names = F,append=T,sheetName = "another")
data = read.xlsx("emp.xlsx",sheetIndex = 2)
data
data <- data.frame(player=c('A', 'B', 'C', 'D'),
runs=c(100, 200, 408, NA),
wickets=c(17, 20, NA, 5))
write.xlsx(data, "write.xlsx",row.names = F)
data = read.xlsx("write.xlsx",sheetIndex = 1)
data
#mean
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
result.mean <- mean(x)
result.mean
#trim from 0-1
trimm = mean(x,trim=0.2)
print(result.mean)
print(trimm)
#mean
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
result.mean <- mean(x)
result.mean
#na.rm
cc=c(-21,-5,2,3,4.2,7,8,12,18,54,NA)
mean(cc) # NA
mean(cc,na.rm= T)
#median
median(cc,na.rm=T)
#mode
x<-c(10,20,20,30,40,40,40,40,50,60)
charv <- c("o","it","the","it","it")
charv
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
u
match(x, u)
tab <- tabulate(match(x, u))
tab
max(tab)
u[4]
find_mode <- function(x) {
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
}
find_mode(x)
find_mode(charv)
letters[1,5]
letters[1:5]
c("2000-01-01")*5
c("2000-01-01"
)
clear
seq_along(6,8)
seq_along(6)
seq(1,2)
seq(1,5)
seq(1,5,by=.3)
seq(1,5,to.length.out=5)
seq(1,5,length.out=5)
seq(8,6,length.out=5)
student.data = data.frame(
Name=c("a","b","c","d","e"),
Roll_No=c(1,2,3,4,5),
DOB=as.Date(c("2000-01-01","2000-01-01","2000-01-01","2000-01-01","2000-01-01")),
GPA=c(8.0, 7.5 ,7.0 ,6.5 ,6.0)
)
student.data
student_data = data.frame(
Name=c("a","b","c","d","e"),
Roll_No=c(1,2,3,4,5),
DOB=as.Date(c("2000-01-01","2000-01-01","2000-01-01","2000-01-01","2000-01-01")),
GPA=c(8.0, 7.5 ,7.0 ,6.5 ,6.0)
)
student.data = data.frame(
student_data)
student.data
student.data = data.frame(
student_data[1])
student.data
student.data = data.frame(
student_data[2],
student_data[1],
student_data[4],
student_data[3]
)
student.data
student.data[3,5]
student.data[3,1]
student.data[c(3,1)]
student.data[c(3,5),c(1,3)]
student.data$Roll_No=NULL
student.data
print(i)
for i in 1:100{
for(i in 1:100){
print(i)
}
for(i in 1:100){
if(i%%2==0)
ev[i] = i
}
ev = c()
for(i in 1:100){
if(i%%2==0)
ev[i] = i
}
ev
for(i in 1:100){
if(i%%2==0)
ev[i-1] = i
}
ev
ev[i-2] = i
for(i in 1:100){
if(i%%2==0)
ev[i-2] = i
}
ev
j=j+1
if(i%%2==0){
ev[j] = i
j=j+1
}
for(i in 1:100){
if(i%%2==0){
ev[j] = i
j=j+1
}
}
ev
j=0
j=1
for(i in 1:100){
if(i%%2==0){
ev[j] = i
j=j+1
}
}
ev
ev = c()
j=1
for(i in 1:100){
if(i%%2==0){
ev[j] = i
j=j+1
}
}
ev
print(i)
for(i in v1){
print(i)
}
v1 = c(49,21,34,53,11)
v2 = c(14,49,53,34,81)
for(i in v1){
print(i)
}
print(i)
for(i in v1){
if(i !in v2)
if(i !%in% v2){
if(i %!in% v2){
#do nothing
}else
for(i in v1){
if(i %!in% v2){
#do nothing
}else
print(i)
}
if(i %in% v2){
#do nothing
}else
print(i)
for(i in v1){
if(i %in% v2){
#do nothing
}else
print(i)
}
for(i in v1){
if(i %in% v2){
#do nothing
}else
print(i)
}
st = data(state)
st
state
st = data(state)
st = data("state")
st
vehicle = read.csv("vehicle.csv")
getwe()
getwd()
setwd("/Users/gautamsaha/Desktop/projects/r-progs/sessional2")
getwd()
vehicle = read.csv("vehicle.csv")
vehicle
str(vehicle)
head(vehicle)
tail(vehicle)
hist(vehicle$lc)
hist(vehicle$lc)
hist(vehicle$lc,
breaks=30,
xlim=c(0,1500),
ylim=c(0,500),
col="blue",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
hist(vehicle$lc,
breaks=30,
xlim=c(0,1500),
ylim=c(0,500),
col="yellow",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
hist(vehicle$lc,
breaks=0,
xlim=c(0,1500),
ylim=c(0,500),
col="yellow",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
hist(vehicle$lc,
breaks=10,
xlim=c(0,1500),
ylim=c(0,500),
col="yellow",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
hist(vehicle$lc,
breaks=50,
xlim=c(0,1500),
ylim=c(0,500),
col="yellow",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
hist(vehicle$lc,
breaks=30,
xlim=c(0,1500),
ylim=c(0,500),
col="yellow",
xlab="Labor Cost",
ylab="Frequency",
main="Histogram of labor cost"
)
table(vehicle$State)
vehicle$State
table(vehicle$State)
pie(table(vehicle$State))
tabulate(vehicle$State)
table(vehicle$State)
pie(table(vehicle$State))
boxplot(Mileage~State,vehicle)
plot(vehicle$lh,vehicle$lc)
pairs(vehicle[2:6])
library("psych")
pairs.panels(vehicle[2:5])
Area=c(1,2,3,4,5)
Rent=c(2,4,6,5,8)
plot(Area,Rent)
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.3,pch = 16,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.3,pch = 1,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.3,pch = 16,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.5,pch = 16,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.0,pch = 16,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
plot(Area,Rent,main = "Rent & Area Regression",cex = 1.4,pch = 16,xlab = "Area in cm",ylab = "Rent in Dollor",col="blue")
reg_model <- lm(Rent~Area)
summary(reg_model)
abline(lm(Rent~Area))
a <- data.frame(Area = 4.5)
result <- predict(reg_model,4.5)
result <- predict(reg_model,a)
print(result)
data<-Cardiotocographic
str(data)
data("Cardiotocographic", package = "fuzzyforest")
data("ctg", package = "fuzzyforest")
data<-Cardiotocographic
data<-ctg
str(data)
data<-Cardiotocographic
str(data)
# Get the data points in form of a R vector.
rainfall <- c(799,1174.8,865.1,1334.6,635.4,918.5,685.5,998.6,784.2,985, 882.8, 1071)
s2 = c(10:20)
s1 = c(1:10)
s2 = c(10:20)
t.s = ts(mat,start = c("2020","1"),frequency = 12)
mat = matrix(c(s1,s2),2,10)
mat = matrix(c(s1,s2),nrow = 2,ncol = 10)
mat
s1 = c(1:10)
s2 = c(11:20)
mat = matrix(c(s1,s2),nrow = 2,ncol = 10)
mat
t.s = ts(mat,start = c("2020","1"),frequency = 12)
t.s
